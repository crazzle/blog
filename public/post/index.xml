<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Plainpixels</title>
    <link>/post/</link>
    <description>Recent content in Posts on Plainpixels</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Mark Keinh√∂rster</copyright>
    <lastBuildDate>Sun, 01 Jan 2017 00:00:00 +0100</lastBuildDate>
    <atom:link href="/post/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Timeseries data generation with PyPoSim</title>
      <link>/post/2017-09-17-data-generation-with-pyposim/</link>
      <pubDate>Sun, 17 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/2017-09-17-data-generation-with-pyposim/</guid>
      <description>

&lt;h2 id=&#34;grab-the-data&#34;&gt;Grab the data&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;jR = requests.get(&amp;quot;http://localhost:5000/masterdata/jR&amp;quot;)
masterdata = json.loads(jR.content)
capacity = masterdata[&#39;capacity&#39;] #100
fluctuation = float(masterdata[&#39;fluctuationInPercentage&#39;])/100 #10%
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;read-the-csv&#34;&gt;Read the CSV&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df = pd.read_csv(&amp;quot;telemetry.csv&amp;quot;, delimiter=&#39;;&#39;)
df = df.set_index(pd.DatetimeIndex(df[&#39;ts&#39;]).round(&amp;quot;1S&amp;quot;))
ts = df.drop([&#39;ts&#39;], axis=1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you want to try it yourself, here is the link to the &lt;a href=&#34;/post/2017-09-17-data-generation-with-pyposim/telemetry.csv&#34;&gt;CSV&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;power = ts[ts[&#39;metric&#39;]==&amp;quot;power_output&amp;quot;]
setpoint = ts[ts[&#39;metric&#39;]==&amp;quot;setpoint&amp;quot;]
setpoint[&#39;min_fluctuation&#39;] = setpoint[&#39;value&#39;]-(capacity*fluctuation)
setpoint[&#39;max_fluctuation&#39;] = setpoint[&#39;value&#39;]+(capacity*fluctuation)
dispatch = ts[ts[&#39;metric&#39;]==&amp;quot;dispatch&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;let-s-see-what-comes-out&#34;&gt;Let&amp;rsquo;s see what comes out&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;/post/2017-09-17-data-generation-with-pyposim/graph.png&#34; alt=&#34;alt text&#34; title=&#34;Logo Title Text 1&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The First Post</title>
      <link>/post/2017-09-14-the-first-post/</link>
      <pubDate>Thu, 14 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/2017-09-14-the-first-post/</guid>
      <description>&lt;p&gt;After a long time this website is finally ready to be published.
It will mainly be used to as a platform to publish
&lt;code&gt;apps&lt;/code&gt;, &lt;code&gt;code&lt;/code&gt;, &lt;code&gt;thoughts&lt;/code&gt; and &lt;code&gt;ideas&lt;/code&gt; around &lt;code&gt;software development&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
